const flights = [
    { id: 00, to: "New York", from: "Barcelona", cost: 700, layover: false },
    { id: 01, to: "Los Angeles", from: "Madrid", cost: 1100, layover: true },
    { id: 02, to: "Paris", from: "Barcelona", cost: 210, layover: false },
    { id: 03, to: "Roma", from: "Barcelona", cost: 150, layover: false },
    { id: 04, to: "London", from: "Madrid", cost: 200, layover: false },
    { id: 05, to: "Madrid", from: "Barcelona", cost: 90, layover: false },
    { id: 06, to: "Tokyo", from: "Madrid", cost: 1500, layover: true },
    { id: 07, to: "Shangai", from: "Barcelona", cost: 800, layover: true },
    { id: 08, to: "Sydney", from: "Barcelona", cost: 150, layover: true },
    { id: 09, to: "Tel-Aviv", from: "Madrid", cost: 150, layover: false },
]
let userName=prompt('Buenas, introduzca su nombre por favor: ')
console.log('Bienvenido',userName+'! A continuacion se mostraran los vuelos disponibles: \n')
let average=0,layover=0
for(let i=0;i<flights.length;i++){
if(flights[i].layover){
    console.log('El vuelo con id',flights[i].id,'origen:',flights[i].from+', y destino:',flights[i].to,'tiene un coste de',flights[i].cost,'y realiza una escala. \n')
}else{
console.log('El vuelo con id',flights[i].id,'origen:',flights[i].from+', y destino:',flights[i].to,'tiene un coste de',flights[i].cost,'y no realiza ninguna escala. \n')
}
average+=flights[i].cost
if(flights[i].layover){
    layover++
}
}
average/=flights.length
console.log('La media del precio de los vuelos es',average,'y hay',layover,'vuelos con escalas. \n')
const last5Flights=[]
for(let i=0;i<5;i++){
    last5Flights.push(flights[i+5].to)
}
console.log('Los ultimos 5 vuelos del dia tienen como destino:',last5Flights.join(', ')+'. \n')
let addFlight=(flights)=>{
    let i=flights[flights.length-1].id+1,secondBucleRun=false
    let createFlight=prompt('Buenas ADMIN, esta usted interesado en crear mas vuelos? (se introduciran a continuacion de la lista de los vuelos ya existentes empezando con el id 10) (introduzca "si" para crear mas vuelos / introduzca "no" para no crear mas vuelos) ')
    if(createFlight.toLowerCase()==='si'){
        while(true){
            if(secondBucleRun){
                let createAnotherFlight=prompt('Quiere usted introducir otro vuelo? (introduzca "si" para crear un vuelo / introduzca "no" para no crear mas vuelos) ')
                if(createAnotherFlight.toLowerCase()==='si'){
                    
                }else{
                    break
                }
            }
            if (flights.length>15){
                alert('Perdona pero no puedes introducir mas de 15 vuelos!')
                break
            }
            let to=prompt('Introduzca el lugar del destino: '),from=prompt('Introduzca el lugar de salida: '),cost=Number(prompt('Introduzca el precio del vuelo: ')),layover=prompt('El vuelo hace escala? (introduzca "si" si hace escala / introduzca otra cosa si no hace escala) ')==='si'.toLowerCase() ? true : false
            let obj={
                id: i,
                to: to,
                from: from,
                cost: cost,
                layover: layover
                }
                flights.push(obj)
                console.log('\n A continuacion se mostraran los vuelos disponibles despues de los cambios que se han hecho: \n')
                    for(let i=0;i<flights.length;i++){
                        if(flights[i].layover){
                              console.log('El vuelo con id',flights[i].id,'origen:',flights[i].from+', y destino:',flights[i].to,'tiene un coste de',flights[i].cost,'y realiza una escala. \n')
                        }else{
                            console.log('El vuelo con id',flights[i].id,'origen:',flights[i].from+', y destino:',flights[i].to,'tiene un coste de',flights[i].cost,'y no realiza ninguna escala. \n')
                        }
                    }
            i++
            secondBucleRun=true
            }
        }
    }
let deleteFlight=(flights)=>{
    let j=0
    let wantToDeleteFlight,deleteFlightFromId
    while(true){
    if(j===0){
        wantToDeleteFlight=prompt('ADMIN, esta usted interesado en eliminar algun vuelo? (introduzca "si" para eliminar algun vuelo / introduzca "no" para no eliminar algun vuelo) ')
    }else{
        wantToDeleteFlight=prompt('Esta usted interesado en eliminar otro vuelo? (introduzca "si" para eliminar otro vuelo / introduzca "no" para no eliminar otro vuelo) ')
    }
    if(wantToDeleteFlight.toLowerCase()==='si'){
        deleteFlightFromId=prompt('Introduzca el id del vuelo que quiera eliminar: ')
         for(let i=0;i<flights.length;i++){
            if(Number(flights[i].id)===Number(deleteFlightFromId)){
                flights.splice(i,1)
            }
        }
    }
    else{
        break
    }
    j++
    }
    console.log('\n A continuacion se mostraran los vuelos disponibles despues de los cambios que se han hecho: \n')
    for(let i=0;i<flights.length;i++){
if(flights[i].layover){
    console.log('El vuelo con id',flights[i].id,'origen:',flights[i].from+', y destino:',flights[i].to,'tiene un coste de',flights[i].cost,'y realiza una escala. \n')
}else{
console.log('El vuelo con id',flights[i].id,'origen:',flights[i].from+', y destino:',flights[i].to,'tiene un coste de',flights[i].cost,'y no realiza ninguna escala. \n')
}
}
}
let findFlight=(flights)=>{
    let k=0,introducedMaximPrice
    while(true){
        introducedMaximPrice=prompt('Buenas USER, a continuacion se le mostraran los vuelos con un precio inferior o igual al precio que introduzca: ')
        if(Number.isNaN(Number(introducedMaximPrice))){
            console.log('Introduzca unicamente numeros por favor')
            continue
        }
        break
    }
    for(let i=0;i<flights.length;i++){
        if(Number(introducedMaximPrice)>=flights[i].cost){
            if(flights[i].layover){
                console.log('El vuelo con numero id',flights[i].id,'con salida',flights[i].from,'y llegada',flights[i].to,'tiene un precio de',flights[i].cost,'y hace escala. \n')
            }else{
                console.log('El vuelo con numero id',flights[i].id,'con salida',flights[i].from,'y llegada',flights[i].to,'tiene un precio de',flights[i].cost,'y no hace escala. \n')
            }
        }else{
            k++
        }
    }
    if(k>9){
        console.log('Perdona USER pero ningun vuelo coincide con un valor igual o inferior al introducido')
    }
}
let i=0,AdminOrUser
while(true){
if(i===0){AdminOrUser=prompt('Perdona es usted un ADMIN o un USER? (introduzca ADMIN o USER) ')
}
if(AdminOrUser.toLowerCase()==='admin'){
    addFlight(flights)
    deleteFlight(flights)
    if(confirm('Perdona quiere hacer otra operacion?')){
        continue
    }else{
        console.log('Adios ADMIN que vaya bien!')
        break
    }
}else if(AdminOrUser.toLowerCase()==='user'){
    findFlight(flights)
    if(confirm('Perdona quiere hacer otra operacion?')){
        continue
    }else{
        console.log('Adios USER que vaya bien!')
        break
    }
}
else{
    console.log('Introduzca unicamente admin o user!')
    continue
}
i++
}
